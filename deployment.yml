apiVersion: apps/v1
kind: Deployment
metadata:
  name: geo-location
  labels:
    app: geo-location
spec:
  replicas: 2
  selector:
    matchLabels:
      app: geo-location
  template:
    metadata:
      labels:
        app: geo-location
    spec:
      containers:
        - name: geo-location
          image: docker.io/fabricio211/geo-location:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          resources:
            requests:
              cpu: 1000m
              memory: 1Gi
            limits:
              cpu: 1000m
              memory: 1Gi
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
          env:
            - name: REDIS_HOST
              value: redis
---
apiVersion: v1
kind: Service
metadata:
  name: geo-location
  labels:
    app: geo-location
spec:
  selector:
    app: geo-location
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: geo-location-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - host: geo-location.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: geo-location
                port:
                  number: 80